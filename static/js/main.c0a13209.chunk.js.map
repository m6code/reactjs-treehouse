{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["Stats","players","totalPlayers","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopwatch","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","defaultProps","Counter","index","changeScore","Icon","props","viewBox","isHighScore","d","transform","width","height","Player","name","removePlayer","id","console","log","PureComponent","AddPlayerForm","addPlayer","playerInput","React","createRef","onSubmit","e","preventDefault","current","value","currentTarget","reset","type","ref","placeholder","App","handleScoreChange","delta","handleAddPlayer","handleRemovePlayer","filter","p","getHighScore","scores","map","highestScore","max","sort","a","b","key","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0a13209.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Stats = ({players}) => {\r\n\r\n    const totalPlayers = players.length;\r\n    const totalPoints = players.reduce((total, player) => {\r\n        return total + player.score;\r\n    }, 0);\r\n\r\n    return (\r\n        <table className=\"stats\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>Players:</td>\r\n                    <td>{totalPlayers}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Total Points:</td>\r\n                    <td>{totalPoints}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    );\r\n}\r\n\r\nStats.propTypes = {\r\n    players: PropTypes.arrayOf(PropTypes.shape({\r\n        score: PropTypes.number\r\n    }))\r\n};\r\n\r\nexport default Stats;","import React, { Component } from 'react'\r\n\r\nexport class Stopwatch extends Component {\r\n\r\n    state = {\r\n        isRunning: false,\r\n        elapsedTime: 0,\r\n        previousTime: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n        // LifeCycles Hooks\r\n        // Called as soon as a component is mounted\r\n        this.intervalID = setInterval(() => this.tick(), 100);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    tick = () => {\r\n        if (this.state.isRunning) {\r\n            const now = Date.now();\r\n            this.setState(prevState => ({\r\n                previousTime: now,\r\n                elapsedTime: prevState.elapsedTime + (now - prevState.previousTime)\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleStopwatch = () => {\r\n        this.setState(prevState => ({\r\n            isRunning: !prevState.isRunning,\r\n        }));\r\n\r\n        if (!this.state.isRunning) {\r\n            this.setState({\r\n                previousTime: Date.now(),\r\n            });\r\n        }\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            elapsedTime: 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {handleReset, handleStopwatch} = this; // equivalent to writing {this.handleReset} & {this.handleStopwatch} in the onClick method of the buttons\r\n        const {elapsedTime, isRunning} = this.state; //Destructuring to avoid this.state.elapsedTime|isRunning calling in the JSX\r\n\r\n        const seconds = Math.floor(elapsedTime / 1000);\r\n        return (\r\n            <div className=\"stopwatch\">\r\n                <h2>Stopwatch</h2>\r\n                <span className=\"stopwatch-time\">\r\n                    {seconds}\r\n                </span>\r\n                <button onClick={handleStopwatch}>\r\n                    {isRunning ? \"Stop\" : \"Start\"}\r\n                </button>\r\n                <button onClick={handleReset}>Reset</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stopwatch;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Stats from './Stats'\r\nimport Stopwatch from './Stopwatch'\r\n\r\nconst Header = ({ players, title }) => {\r\n  // React component are required to begin with capital letter to differential between html tags and react component JSX tags.\r\n  // const { players, title } = props;\r\n  return (\r\n    <header>\r\n      <Stats players={players} />\r\n      <h1>{title}</h1>\r\n      <Stopwatch />\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  players: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Scoreboard'\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Counter = ({index, score, changeScore}) => {\r\n\r\n        return (\r\n            <div className=\"counter\">\r\n                <button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\r\n                <span className=\"counter-score\">{score}</span>\r\n                <button className=\"counter-action increment\" onClick={() => changeScore(index, +1)}> + </button>\r\n            </div>\r\n        );\r\n  }\r\n\r\n  Counter.propTypes = {\r\n    index: PropTypes.number,\r\n    score: PropTypes.number,\r\n    changeScore: PropTypes.func\r\n  };\r\n\r\n  export default Counter;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Icon = (props) =>\r\n  <svg viewBox=\"0 0 44 35\" className={ props.isHighScore ? 'is-high-score' : null }>\r\n    <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\r\n    <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\r\n  </svg>;\r\n\r\nIcon.propTypes = {\r\n  isHighScore: PropTypes.bool\r\n};\r\n\r\nexport default Icon;","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nimport Counter from './Counter'\r\nimport Icon from './Icon';\r\n\r\n// Player component\r\nclass Player extends PureComponent {\r\n    static propTypes = {\r\n        changeScore: PropTypes.func,\r\n        removePlayer: PropTypes.func,\r\n        name: PropTypes.string.isRequired,\r\n        id: PropTypes.number,\r\n        index: PropTypes.number,\r\n        score: PropTypes.number.isRequired,\r\n        isHighScore: PropTypes.bool,\r\n    };\r\n\r\n    render() {\r\n        // Destructure the class Component\r\n        const {\r\n            score,\r\n            changeScore,\r\n            index,\r\n            name,\r\n            removePlayer,\r\n            id,\r\n            isHighScore,\r\n        } = this.props;\r\n\r\n        console.log(name + \" rendered\")\r\n        \r\n        return (\r\n            <div className=\"player\">\r\n                <span className=\"player-name\">\r\n                    <button className=\"remove-player\" onClick={() => removePlayer(id)}>x</button>\r\n                    <Icon isHighScore={isHighScore}/>\r\n                    {name}\r\n                </span>\r\n                \r\n                {/* <Counter /> // Component composition */}\r\n                <Counter\r\n                    score={score}\r\n                    changeScore={changeScore}\r\n                    index={index}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst AddPlayerForm = ({ addPlayer }) => {\r\n\r\n    let playerInput = React.createRef();\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addPlayer(playerInput.current.value);\r\n        e.currentTarget.reset();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                ref={playerInput}\r\n                placeholder=\"Enter a player's name\"\r\n            />\r\n\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Add Player\"\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddPlayerForm.propTypes = {\r\n    addPlayer: PropTypes.func,\r\n};\r\n\r\nexport default AddPlayerForm;\r\n","import React, { Component } from 'react'\r\n\r\nimport Header from './Header';\r\nimport Player from './Player'\r\nimport AddPlayerForm from './AddPlayerForm';\r\n\r\n// App component\r\nclass App extends Component {\r\n\r\n    state = {\r\n        players: [\r\n            {\r\n                id: Date.now(),\r\n                name: \"Benjamin\",\r\n                score: 0,\r\n            },\r\n            {\r\n                id: Date.now() + 1,\r\n                name: \"Johnny\",\r\n                score: 1,\r\n            },\r\n            {\r\n                id: Date.now() + 2,\r\n                name: \"Simi\",\r\n                score: 6,\r\n            },\r\n            {\r\n                id: Date.now() + 3,\r\n                name: \"Aramide\",\r\n                score: 2,\r\n            }\r\n        ]\r\n    };\r\n\r\n    handleScoreChange = (index, delta) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                score: prevState.players[index].score += delta\r\n            }\r\n        });\r\n        // console.log(\"delta: \", delta + \" index: \", index);\r\n    }\r\n\r\n    handleAddPlayer = (name) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                players: [\r\n                    ...prevState.players,\r\n                    {\r\n                        id: Date.now(),\r\n                        name: name,\r\n                        score: 0,\r\n                    }\r\n                ]\r\n            };\r\n        });\r\n    }\r\n\r\n    handleRemovePlayer = (id) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                players: prevState.players.filter(p => p.id !== id)\r\n            };\r\n        });\r\n    }\r\n\r\n    getHighScore = () =>{\r\n        const scores = this.state.players.map(p => p.score);\r\n        const highestScore = Math.max(...scores)\r\n        if(highestScore){\r\n            return highestScore;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"scoreboard\">\r\n                <Header players={this.state.players} />\r\n\r\n                {/* Players list */}\r\n                {this.state.players.sort((a,b) => (a.score < b.score ? 1 : -1)).map((player, index) =>\r\n                    <Player\r\n                        name={player.name}\r\n                        score={player.score}\r\n                        key={player.id.toString()}\r\n                        id={player.id}\r\n                        index={index}\r\n                        removePlayer={this.handleRemovePlayer}\r\n                        changeScore={this.handleScoreChange}\r\n                        isHighScore={this.getHighScore() === player.score}\r\n                    // react docs recommends that our key be string\r\n                    />\r\n                )}\r\n                <AddPlayerForm addPlayer={this.handleAddPlayer} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}